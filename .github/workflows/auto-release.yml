name: Auto Release on PR Merge
on:
  pull_request:
    types: [closed]
    branches: [master,main]
permissions:
  contents: write
  pull-requests: read
jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get latest tag
        LATEST=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "Latest tag: $LATEST"
        
        # Calculate next version
        VERSION=${LATEST#v}
        IFS='.' read -ra PARTS <<< "$VERSION"
        MAJOR=${PARTS[0]:-0}
        MINOR=${PARTS[1]:-0}
        PATCH=${PARTS[2]:-0}
        
        # Increment patch version
        NEW_VERSION="v$MAJOR.$MINOR.$((PATCH + 1))"
        echo "New version: $NEW_VERSION"
        
        # Create and push tag first
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag "$NEW_VERSION"
        git push origin "$NEW_VERSION"
        
        # Create release using GitHub API
        curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d "{
            \"tag_name\": \"$NEW_VERSION\",
            \"target_commitish\": \"master\",
            \"name\": \"Release $NEW_VERSION\",
            \"body\": \"**PR #${{ github.event.number }}**: ${{ github.event.pull_request.title }}\\n\\n**Changes in this release:**\\n- Merged PR #${{ github.event.number }} by @${{ github.event.pull_request.user.login }}\\n\\n**Full Changelog**: https://github.com/${{ github.repository }}/compare/${LATEST}...${NEW_VERSION}\",
            \"draft\": false,
            \"prerelease\": false,
            \"make_latest\": \"true\"
          }"
        
        echo "Created GitHub release: $NEW_VERSION"
